import requests
import asyncio
from telegram import Bot
import time

# üîπ API-–∫–ª—é—á–∏ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
MISTRAL_API_KEY = "—Ç–æ–∫–µ–Ω"
UNSPLASH_API_KEY = "—Ç–æ–∫–µ–Ω"
TELEGRAM_BOT_TOKEN = "—Ç–æ–∫–µ–Ω"
CHANNEL_ID = "@—é–∑ –∫–∞–Ω–∞–ª–∞"

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
NUM_NEWS = 3  # –°–∫–æ–ª—å–∫–æ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞ —Ä–∞–∑

# –°–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)

async def send_news_with_image(news_text, image_url):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç—å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ Telegram"""
    message = f"{news_text}\n\nüì¢ –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è: @–≤–∞—à —é–∑"

    try:
        if image_url:
            await bot.send_photo(chat_id=CHANNEL_ID, photo=image_url, caption=message)
        else:
            await bot.send_message(chat_id=CHANNEL_ID, text=message)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

def get_news():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ Mistral API"""
    url = "https://api.mistral.ai/v1/chat/completions"
    headers = {"Authorization": f"Bearer {MISTRAL_API_KEY}", "Content-Type": "application/json"}
    data = {
        "model": "mistral-medium",
        "messages": [{"role": "system", "content": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 3 —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –º–∏—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ. –†–∞–∑–¥–µ–ª–∏ –∏—Ö –ø—É—Å—Ç—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏. –ê —Ç–∞–∫–∂–µ –Ω–µ —Å—Ç–∞–≤—å –Ω—É–º–µ—Ä–∞—Ü–∏—é"}]
    }

    response = requests.post(url, json=data, headers=headers).json()
    return response.get("choices", [{}])[0].get("message", {}).get("content", "").split("\n\n")

def get_image(query):
    """–ò—â–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ —á–µ—Ä–µ–∑ Unsplash API"""
    url = f"https://api.unsplash.com/photos/random?query={query}&client_id={UNSPLASH_API_KEY}"
    response = requests.get(url).json()
    return response.get("urls", {}).get("regular", None)

async def main():
    while True:
        print("üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π...")
        news_list = get_news()

        for news in news_list[:NUM_NEWS]:
            if news.strip():
                image_url = get_image(news[:30])  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 30 —Å–∏–º–≤–æ–ª–æ–≤ –∫–∞–∫ —Ç–µ–º—É
                await send_news_with_image(news, image_url)
        
        print("‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –ñ–¥—ë–º 1 —á–∞—Å...")
        time.sleep(3600)

if __name__ == "__main__":
    asyncio.run(main())
